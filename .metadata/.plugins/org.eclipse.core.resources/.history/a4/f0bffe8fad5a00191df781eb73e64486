package es.upm.dit.isst.webLab.dao;

import java.util.Collection;

import org.hibernate.Session;

import es.upm.dit.isst.webLab.model.TFG;

public class TFGDAOImplementation implements TFGDAO{
	private static TFGDAOImplementation instance = null;
	private TFGDAOImplementation() {}
	
	public static TFGDAOImplementation getInstance() {
		if (instance == null){
			instance = new TFGDAOImplementation();
		}
		return instance;
	}

	@Override
	public void create(TFG tfg) {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		session.save( tfg );
		session.getTransaction().commit();
		session.close();
		
	}

	@Override
	public TFG read(String email) {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		TFG tfg = session.load( TFG.class, email );
		session.getTransaction().commit();
		session.close();
		return tfg;
	}

	@Override
	public void update(TFG tfg) {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		session.saveOrUpdate( tfg );
		session.getTransaction().commit();
		session.close();
	}

	@Override
	public void delete(TFG tfg) {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		session.delete( tfg );
		session.getTransaction().commit();
		session.close();
	}

	@SuppressWarnings("unchecked")
	@Override
	public Collection<TFG> readAll() {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		Collection<TFG> tfgs = session.createQuery( "from TFG" ).list();
		session.getTransaction().commit();
		session.close();
		return tfgs;
	}
	
}
